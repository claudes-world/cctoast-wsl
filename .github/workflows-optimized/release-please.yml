name: Release Please (Optimized)

on:
  push:
    branches:
      - main
    # OPTIMIZATION: Only run Release Please when actual code changes
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'package*.json'
      - 'CHANGELOG.md'
      - 'bin/**'
      # Exclude docs-only changes to save CI minutes
      - '!docs/**'
      - '!README.md'
      - '!**/*.md'
      # But include CHANGELOG.md since it's release-relevant
      - 'CHANGELOG.md'

# Prevent concurrent release PRs
concurrency:
  group: release-please
  cancel-in-progress: false

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      
    outputs:
      release-created: ${{ steps.release.outputs.release_created }}
      tag-name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      pr: ${{ steps.release.outputs.pr }}
      
    steps:
      - name: Run Release Please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          # Repository configuration
          repo-url: ${{ github.server_url }}/${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          
          # Release configuration
          release-type: node
          package-name: '@claude/cctoast-wsl'
          
          # Changelog configuration
          changelog-types: |
            [
              {"type":"feat","section":"🚀 Features","hidden":false},
              {"type":"fix","section":"🐛 Bug Fixes","hidden":false},
              {"type":"perf","section":"⚡ Performance Improvements","hidden":false},
              {"type":"refactor","section":"♻️ Code Refactoring","hidden":false},
              {"type":"docs","section":"📚 Documentation","hidden":false},
              {"type":"test","section":"🧪 Tests","hidden":false},
              {"type":"ci","section":"🔧 Continuous Integration","hidden":false},
              {"type":"build","section":"📦 Build System","hidden":false},
              {"type":"chore","section":"🔨 Miscellaneous","hidden":true},
              {"type":"style","section":"💎 Styles","hidden":true}
            ]
            
          # Pull request configuration
          pull-request-title-pattern: "chore: release ${version}"
          pull-request-header: |
            ## 🤖 Release Preparation
            
            This PR was automatically generated by [Release Please](https://github.com/googleapis/release-please-action).
            
            ### 📝 Changes Included
            
          # Versioning strategy
          versioning-strategy: default
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true
          
          # File configuration  
          extra-files: |
            bin/cctoast-wsl
            
      - name: Process Release Please Results
        if: steps.release.outputs.pr
        run: |
          echo "📋 Release Please created PR #${{ fromJson(steps.release.outputs.pr).number }}"
          echo "🔗 PR URL: ${{ fromJson(steps.release.outputs.pr).html_url }}"
          echo "📊 Changes ready for review"
          
      - name: Log Release Creation
        if: steps.release.outputs.release_created
        run: |
          echo "🎉 Release created: ${{ steps.release.outputs.tag_name }}"
          echo "📦 Version: ${{ steps.release.outputs.version }}"
          echo "🔖 Tag: ${{ steps.release.outputs.tag_name }}"
          
  # OPTIMIZATION: Merge release validation with existing CI checks
  # Instead of duplicating CI logic, trigger the optimized CI workflow
  validate-release:
    name: Validate Release PR  
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.pr && !needs.release-please.outputs.release_created
    
    steps:
      - name: Trigger CI validation
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ fromJson(needs.release-please.outputs.pr).number }};
            
            // The release PR will automatically trigger the CI workflow
            // due to the pull_request trigger, so we just need to wait for it
            core.info(`Release PR #${prNumber} will be validated by the CI workflow`);
            core.info('CI validation includes: TypeScript compilation, linting, tests, coverage, and build verification');
            
      - name: Log validation approach
        run: |
          echo "✅ Release validation optimized:"
          echo "  - Leveraging existing CI workflow instead of duplicating tests"
          echo "  - CI workflow will run automatically on release PR"
          echo "  - Saves ~3-5 minutes per release by avoiding duplication"
          
  # OPTIMIZATION: Simplified auto-merge with better conditions
  auto-merge-release:
    name: Auto-merge Release PR
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.pr
    
    permissions:
      contents: write
      pull-requests: write
      checks: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Enable auto-merge for release PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ fromJson(needs.release-please.outputs.pr).number }}
        run: |
          echo "🔄 Enabling auto-merge for release PR #${PR_NUMBER}"
          
          # Enable auto-merge with squash strategy
          gh pr merge ${PR_NUMBER} --auto --squash
          
          # Add auto-merge comment
          gh pr comment ${PR_NUMBER} --body "🤖 **Auto-merge enabled**
          
          This release PR will be automatically merged when:
          - ✅ All required status checks pass (CI workflow)
          - ✅ No merge conflicts exist
          - ✅ PR is up to date with base branch
          
          **Optimization Note**: This release validation leverages the existing CI workflow instead of duplicating tests, saving ~3-5 CI minutes per release.
          
          The merge will trigger the release workflow to publish to npm."