# ──────────────────────────────────────────────────────────────────────
# Claude Code - Unified Workflow
# ──────────────────────────────────────────────────────────────────────
# Handles both general @claude interactions and code reviews in one workflow
# Consolidates claude.yml + claude-code-review-new.yml functionality
# Eliminates duplication while maintaining security and flexibility

name: Claude Code
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened]
  pull_request_review:
    types: [submitted]

env:
  ALLOWED_USERS_JSON: '["mcorrig4"]'
  # ALLOWED_USERS_JSON: '["mcorrig4","claude-do"]'
  ALLOWED_AUTHOR_ASSOCIATION_JSON: '["OWNER"]'
  # ─────── Claude's World & Chaintail Organization Repos ───────
  REPOSITORY_OWNER_JSON: '["claudes-world","mcorrig4","claude-do","chaintail"]'

jobs:
  claude:
    if: |
      contains(fromJSON(env.REPOSITORY_OWNER_JSON), github.repository_owner) &&
      (
        # ═══════════════════════════════════════════════════════════════════
        # General @claude interactions (issues, comments, reviews)
        # ═══════════════════════════════════════════════════════════════════
        (
          (
            github.event_name == 'issues' &&
            github.event.action == 'opened' &&
            (
              contains(github.event.issue.title, '@claude') ||
              contains(github.event.issue.body, '@claude')
            )
          ) ||
          (
            (
              github.event_name == 'issue_comment' ||
              github.event_name == 'pull_request_review_comment'
            ) &&
            contains(github.event.comment.body, '@claude') &&
            (!contains(github.event.comment.body, '@claude review')) &&
            (!contains(github.event.comment.body, '@claude please review'))
          ) ||
          (
            github.event_name == 'pull_request_review' &&
            contains(github.event.review.body, '@claude') &&
            (!contains(github.event.review.body, '@claude review')) &&
            (!contains(github.event.review.body, '@claude please review'))
          )
        ) ||
        # ═══════════════════════════════════════════════════════════════════
        # Manual code reviews (@claude review or @claude please review)
        # ═══════════════════════════════════════════════════════════════════
        (
          (
            github.event_name == 'pull_request_review_comment' && 
            (
              contains(github.event.comment.body, '@claude review') ||
              contains(github.event.comment.body, '@claude please review')
            )
          ) ||
          (
            github.event_name == 'issue_comment' && 
            github.event.issue.pull_request && 
            (
              contains(github.event.comment.body, '@claude review') ||
              contains(github.event.comment.body, '@claude please review')
            )
          )
        )
      ) &&
      # ═══════════════════════════════════════════════════════════════════
      # User authorization (shared security logic)
      # ═══════════════════════════════════════════════════════════════════
      (
        contains(fromJSON(env.ALLOWED_USERS_JSON), coalesce(github.event.comment.user.login, github.event.review.user.login, github.event.issue.user.login)) ||
        contains(fromJSON(env.ALLOWED_AUTHOR_ASSOCIATION_JSON), coalesce(github.event.comment.author_association, github.event.review.author_association, github.event.issue.author_association))
      )
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Determine interaction type
        id: interaction-type
        run: |
          # Check if this is a code review request
          if [[ "${{ github.event_name }}" == "pull_request_review_comment" ]]; then
            comment_body="${{ github.event.comment.body }}"
          elif [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            comment_body="${{ github.event.comment.body }}"
          elif [[ "${{ github.event_name }}" == "pull_request_review" ]]; then
            comment_body="${{ github.event.review.body }}"
          else
            comment_body=""
          fi
          
          if [[ "$comment_body" == *"@claude review"* ]] || [[ "$comment_body" == *"@claude please review"* ]]; then
            echo "type=review" >> $GITHUB_OUTPUT
            echo "🔍 Detected code review request"
          else
            echo "type=general" >> $GITHUB_OUTPUT
            echo "💬 Detected general Claude interaction"
          fi

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # Allow Claude to read CI results on PRs
          additional_permissions: |
            actions: read
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Conditional prompt based on interaction type
          direct_prompt: |
            ${{ steps.interaction-type.outputs.type == 'review' && 
            'Please review this pull request as requested and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage
            
            Be constructive and helpful in your feedback.' ||
            '' }}
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Optional: Allow Claude to run specific commands
          # allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"
          
          # Optional: Add custom instructions for Claude to customize its behavior for your project
          # custom_instructions: |
          #   Follow our coding standards
          #   Ensure all new code has tests
          #   Use TypeScript for new files
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test

# ──────────────────────────────────────────────────────────────────────
# Workflow Consolidation Notes:
# ──────────────────────────────────────────────────────────────────────
# This workflow replaces:
# - claude.yml (general @claude interactions)
# - claude-code-review-new.yml (manual code reviews)
# - claude-code-review.yml (REMOVED - deprecated automatic reviews)
#
# Key improvements:
# ✅ Eliminates 95% code duplication
# ✅ Consistent security controls across all features
# ✅ Single source of truth for maintenance
# ✅ Prevents trigger conflicts and edge cases
# ✅ Intelligent branching logic for different interaction types
# ✅ Maintains backward compatibility with existing @claude usage
# ──────────────────────────────────────────────────────────────────────